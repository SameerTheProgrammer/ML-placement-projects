# -*- coding: utf-8 -*-
"""placement-project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gz-4zc4odDY6JF-GY4BQadh3T8SU4OSU
"""

# from google.colab import drive
# drive.mount('/content/drive')

"""### Steps:-
1. Preproccessing + EDA + Feature Selection
2. Extract input and output cols
3. Scale the value
4. Train test split
5. Train the model
6. Evaluate the model/model Selection
7. Deploy the model

"""

import numpy as np
import pandas as ps

df = ps.read_csv('/content/drive/MyDrive/Colab Notebooks/placement-project/placement-dataset.csv')
df.sample(5)

"""### 1. Preproccessing + EDA + Feature Selection

"""

df = df.iloc[:,1:]
df.head()

df.info()

import matplotlib.pyplot as plt

plt.scatter(df['cgpa'],df['iq'], c=df['placement'])

"""### 2. Extract input and output cols"""

X = df.iloc[:,0:2]
y = df.iloc[:,-1]

X

"""### 4. Train test split"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, )

X_train

"""### 3. Scale the value

"""

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()

X_train = scaler.fit_transform(X_train)
X_train[:20,:]

X_test = scaler.transform(X_test)
X_test

"""### 5. Train the model"""

from sklearn.linear_model import LogisticRegression

clf = LogisticRegression()

clf.fit(X_train,y_train)

y_prec = clf.predict(X_test)
y_prec

# To find prediction accuracy

from sklearn.metrics import accuracy_score

accuracy_score(y_test,y_prec)

# To see how model divide the dataset

from mlxtend.plotting import plot_decision_regions

plot_decision_regions(X_train, y_train.values, clf=clf, legend=2)

# Pickle is library used for to make file of trained model to use it in many place

# import pickle

# pickle.dump(clf, open('/content/drive/MyDrive/Colab Notebooks/placement-project/placement.pkl', 'wb'))